---
# Only the main Sass file needs front matter (the dashes are enough)
---

$base-font-size:   16px !default;
$text-color:       #353535 !default;
$brand-color:      #5997E7 !default;

/*
colors from minima tweaked with https://webaim.org/resources/contrastchecker/
*/
$background-color: #000000; 
$text-color: #e6e6e6; 
$grey-color: #969696;
$grey-color-light: #565656; 
$grey-color-dark: #cdcdcd; 

@import "minima";


/*
see _sass/minima/_base.scss Â«
*/
code {
    background-color: invert(#eef);
}


/**
 * see _sass/minima/_syntax-highlighting.scss
 */
 .highlight {
    background: invert(#fff);
    @extend %vertical-rhythm;
  
    .highlighter-rouge & {
      background: invert(#eef);
    }
  
    .c     { color: invert(#998); font-style: italic } // Comment
    .err   { color: invert(#a61717); background-color: invert(#e3d2d2) } // Error
    .k     { font-weight: bold } // Keyword
    .o     { font-weight: bold } // Operator
    .cm    { color: invert(#998); font-style: italic } // Comment.Multiline
    .cp    { color: invert(#999); font-weight: bold } // Comment.Preproc
    .c1    { color: invert(#998); font-style: italic } // Comment.Single
    .cs    { color: invert(#999); font-weight: bold; font-style: italic } // Comment.Special
    .gd    { color: invert(#000); background-color: invert(#fdd) } // Generic.Deleted
    .gd .x { color: invert(#000); background-color: invert(#faa) } // Generic.Deleted.Specific
    .ge    { font-style: italic } // Generic.Emph
    .gr    { color: invert(#a00) } // Generic.Error
    .gh    { color: invert(#999) } // Generic.Heading
    .gi    { color: invert(#000); background-color: invert(#dfd) } // Generic.Inserted
    .gi .x { color: invert(#000); background-color: invert(#afa) } // Generic.Inserted.Specific
    .go    { color: invert(#888) } // Generic.Output
    .gp    { color: invert(#555) } // Generic.Prompt
    .gs    { font-weight: bold } // Generic.Strong
    .gu    { color: invert(#aaa) } // Generic.Subheading
    .gt    { color: invert(#a00) } // Generic.Traceback
    .kc    { font-weight: bold } // Keyword.Constant
    .kd    { font-weight: bold } // Keyword.Declaration
    .kp    { font-weight: bold } // Keyword.Pseudo
    .kr    { font-weight: bold } // Keyword.Reserved
    .kt    { color: invert(#458); font-weight: bold } // Keyword.Type
    .m     { color: invert(#099) } // Literal.Number
    .s     { color: invert(#d14) } // Literal.String
    .na    { color: invert(#008080) } // Name.Attribute
    .nb    { color: invert(#0086B3) } // Name.Builtin
    .nc    { color: invert(#458); font-weight: bold } // Name.Class
    .no    { color: invert(#008080) } // Name.Constant
    .ni    { color: invert(#800080) } // Name.Entity
    .ne    { color: invert(#900); font-weight: bold } // Name.Exception
    .nf    { color: invert(#900); font-weight: bold } // Name.Function
    .nn    { color: invert(#555) } // Name.Namespace
    .nt    { color: invert(#000080) } // Name.Tag
    .nv    { color: invert(#008080) } // Name.Variable
    .ow    { font-weight: bold } // Operator.Word
    .w     { color: invert(#bbb) } // Text.Whitespace
    .mf    { color: invert(#099) } // Literal.Number.Float
    .mh    { color: invert(#099) } // Literal.Number.Hex
    .mi    { color: invert(#099) } // Literal.Number.Integer
    .mo    { color: invert(#099) } // Literal.Number.Oct
    .sb    { color: invert(#d14) } // Literal.String.Backtick
    .sc    { color: invert(#d14) } // Literal.String.Char
    .sd    { color: invert(#d14) } // Literal.String.Doc
    .s2    { color: invert(#d14) } // Literal.String.Double
    .se    { color: invert(#d14) } // Literal.String.Escape
    .sh    { color: invert(#d14) } // Literal.String.Heredoc
    .si    { color: invert(#d14) } // Literal.String.Interpol
    .sx    { color: invert(#d14) } // Literal.String.Other
    .sr    { color: invert(#009926) } // Literal.String.Regex
    .s1    { color: invert(#d14) } // Literal.String.Single
    .ss    { color: invert(#990073) } // Literal.String.Symbol
    .bp    { color: invert(#999) } // Name.Builtin.Pseudo
    .vc    { color: invert(#008080) } // Name.Variable.Class
    .vg    { color: invert(#008080) } // Name.Variable.Global
    .vi    { color: invert(#008080) } // Name.Variable.Instance
    .il    { color: invert(#099) } // Literal.Number.Integer.Long
  }
  
